version: "3.7"
services:
  backend:
    image: "docker.io/svix/svix-server"
    environment:
      WAIT_FOR: "true" # We want to wait for the default services
      SVIX_REDIS_DSN: "redis://redis:6379"
      SVIX_DB_DSN: "postgresql://postgres:postgres@pgbouncer/postgres"
      SVIX_JWT_SECRET: "helphelphelp"
    ports:
      - "8071:8071"
    depends_on:
      - pgbouncer
      - redis

  postgres:
    image: "docker.io/postgres:13.4"
    volumes:
      - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_PASSWORD: postgres

  pgbouncer:
    image: "docker.io/edoburu/pgbouncer:1.15.0"
    healthcheck:
      test: "pg_isready -h localhost"
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      DB_HOST: "postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      MAX_CLIENT_CONN: 500
    depends_on:
      - postgres

  redis:
    image: "docker.io/redis:7.0.15-alpine3.20"
    # Enable persistence
    command: "--save 60 500 --appendonly yes --appendfsync everysec"
    volumes:
      - "redis-data:/data"
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

volumes:
  postgres-data:
  redis-data:
  prom_data:
