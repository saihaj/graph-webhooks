/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VectorValues {
  affinity?: {};
  args?: string[];
  autoscaling?: {
    annotations?: {};
    behavior?: {};
    customMetric?: {};
    enabled?: boolean;
    maxReplicas?: number;
    minReplicas?: number;
    targetCPUUtilizationPercentage?: number;
    targetMemoryUtilizationPercentage?: null;
  };
  command?: unknown[];
  commonLabels?: {};
  containerPorts?: unknown[];
  customConfig?: {};
  dataDir?: string;
  defaultVolumeMounts?: {
    mountPath?: string;
    name?: string;
    readOnly?: boolean;
  }[];
  defaultVolumes?: {
    hostPath?: {
      path?: string;
    };
    name?: string;
  }[];
  dnsConfig?: {};
  dnsPolicy?: string;
  env?: unknown[];
  envFrom?: unknown[];
  existingConfigMaps?: unknown[];
  extraContainers?: unknown[];
  extraObjects?: unknown[];
  extraVolumeMounts?: unknown[];
  extraVolumes?: unknown[];
  fullnameOverride?: string;
  haproxy?: {
    affinity?: {};
    autoscaling?: {
      customMetric?: {};
      enabled?: boolean;
      maxReplicas?: number;
      minReplicas?: number;
      targetCPUUtilizationPercentage?: number;
      targetMemoryUtilizationPercentage?: null;
    };
    containerPorts?: unknown[];
    customConfig?: string;
    enabled?: boolean;
    existingConfigMap?: string;
    extraContainers?: unknown[];
    extraVolumeMounts?: unknown[];
    extraVolumes?: unknown[];
    image?: {
      pullPolicy?: string;
      pullSecrets?: unknown[];
      repository?: string;
      tag?: string;
    };
    initContainers?: unknown[];
    livenessProbe?: {
      tcpSocket?: {
        port?: number;
      };
    };
    nodeSelector?: {};
    podAnnotations?: {};
    podLabels?: {};
    podPriorityClassName?: string;
    podSecurityContext?: {};
    readinessProbe?: {
      tcpSocket?: {
        port?: number;
      };
    };
    replicas?: number;
    resources?: {};
    rollWorkload?: boolean;
    securityContext?: {};
    service?: {
      annotations?: {};
      externalTrafficPolicy?: string;
      ipFamilies?: unknown[];
      ipFamilyPolicy?: string;
      loadBalancerIP?: string;
      ports?: unknown[];
      topologyKeys?: unknown[];
      type?: string;
    };
    serviceAccount?: {
      annotations?: {};
      automountToken?: boolean;
      create?: boolean;
      name?: null;
    };
    strategy?: {};
    terminationGracePeriodSeconds?: number;
    tolerations?: unknown[];
  };
  image?: {
    pullPolicy?: string;
    pullSecrets?: unknown[];
    repository?: string;
    sha?: string;
    tag?: string;
  };
  ingress?: {
    annotations?: {};
    className?: string;
    enabled?: boolean;
    hosts?: unknown[];
    tls?: unknown[];
  };
  initContainers?: unknown[];
  lifecycle?: {};
  livenessProbe?: {};
  logLevel?: string;
  minReadySeconds?: number;
  nameOverride?: string;
  nodeSelector?: {};
  persistence?: {
    accessModes?: string[];
    enabled?: boolean;
    existingClaim?: string;
    finalizers?: string[];
    hostPath?: {
      enabled?: boolean;
      path?: string;
    };
    selectors?: {};
    size?: string;
  };
  podAnnotations?: {};
  podDisruptionBudget?: {
    enabled?: boolean;
    maxUnavailable?: null;
    minAvailable?: number;
  };
  podHostNetwork?: boolean;
  podLabels?: {
    "vector.dev/exclude"?: string;
  };
  podManagementPolicy?: string;
  podMonitor?: {
    additionalLabels?: {};
    enabled?: boolean;
    honorLabels?: boolean;
    honorTimestamps?: boolean;
    interval?: null;
    jobLabel?: string;
    metricRelabelings?: unknown[];
    path?: string;
    podTargetLabels?: unknown[];
    port?: string;
    relabelings?: unknown[];
    scrapeTimeout?: null;
  };
  podPriorityClassName?: string;
  podSecurityContext?: {};
  psp?: {
    create?: boolean;
  };
  rbac?: {
    create?: boolean;
  };
  readinessProbe?: {};
  replicas?: number;
  resources?: {};
  role?: string;
  rollWorkload?: boolean;
  secrets?: {
    generic?: {};
  };
  securityContext?: {};
  service?: {
    annotations?: {};
    enabled?: boolean;
    externalTrafficPolicy?: string;
    internalTrafficPolicy?: string;
    ipFamilies?: unknown[];
    ipFamilyPolicy?: string;
    loadBalancerIP?: string;
    ports?: unknown[];
    topologyKeys?: unknown[];
    type?: string;
  };
  serviceAccount?: {
    annotations?: {};
    automountToken?: boolean;
    create?: boolean;
    name?: null;
  };
  serviceHeadless?: {
    enabled?: boolean;
  };
  shareProcessNamespace?: boolean;
  terminationGracePeriodSeconds?: number;
  tolerations?: unknown[];
  topologySpreadConstraints?: unknown[];
  updateStrategy?: {};
  workloadResourceAnnotations?: {};
}
