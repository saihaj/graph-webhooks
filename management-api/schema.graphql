enum Chain {
  ETH_MAINNET
}

"""Base Error"""
interface Error {
  """Descriptive message of error"""
  message: String!
}

"""Ethereum address"""
scalar EthAddress

type Mutation {
  createProject(input: MutationCreateProjectInput!): Project!
}

input MutationCreateProjectInput {
  """The chain to track the contract on"""
  chain: Chain!

  """The address of the contract to track"""
  contractAddress: EthAddress!

  """The name of the project to create"""
  name: String!

  """The block number to start tracking from"""
  startBlock: Int

  """The URL to send webhook events to"""
  webhookUrl: URL
}

"""A project that tracks a contract on a chain"""
type Project {
  id: ID!
  name: String!
}

type Query {
  hello(name: String): String!
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""Returned when a validation error occurs."""
type ValidationError implements Error {
  """Descriptive message of error"""
  message: String!
}